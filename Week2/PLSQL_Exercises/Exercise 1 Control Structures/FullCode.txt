-- Setup

CREATE TABLE Customers (
    CustomerID NUMBER PRIMARY KEY,
    Name VARCHAR2(50),
    Age NUMBER,
    Balance NUMBER,
    IsVIP VARCHAR2(5) DEFAULT 'FALSE'
);

CREATE TABLE Loans (
    LoanID NUMBER PRIMARY KEY,
    CustomerID NUMBER REFERENCES Customers(CustomerID),
    InterestRate NUMBER,
    DueDate DATE
);

INSERT INTO Customers VALUES (1, 'test1', 65, 5000, 'FALSE');
INSERT INTO Customers VALUES (2, 'test2', 45, 15000, 'FALSE');
INSERT INTO Customers VALUES (3, 'test3', 70, 8000, 'FALSE');
INSERT INTO Customers VALUES (4, 'test4', 30, 12000, 'FALSE');
INSERT INTO Customers VALUES (5, 'test5', 62, 11000, 'FALSE');

INSERT INTO Loans VALUES (101, 1, 8, SYSDATE + 10);
INSERT INTO Loans VALUES (102, 2, 9, SYSDATE + 40);
INSERT INTO Loans VALUES (103, 3, 7.5, SYSDATE + 5);
INSERT INTO Loans VALUES (104, 4, 9.2, SYSDATE + 25);
INSERT INTO Loans VALUES (105, 5, 8.5, SYSDATE + 15);

COMMIT;

SELECT * FROM CUSTOMERS;
SELECT * FROM LOANS;

-- Scenario 1: Apply Discount for Age > 60

DECLARE
cursor cur is select CustomerID,Age from Customers;
BEGIN
for c in cur loop
if c.Age>60 then
update Loans set InterestRate=InterestRate-1 where CustomerID=c.CustomerID;
end if;
end loop;
commit;
end;
/

SELECT * FROM CUSTOMERS;
SELECT * FROM LOANS;

-- Scenario 2: Set VIP if Balance > 10000

DECLARE
cursor cur is select CustomerID,Balance from Customers;
BEGIN
for c in cur loop
if c.Balance>10000 then
update Customers set IsVIP='TRUE' where CustomerID=c.CustomerID;
end if;
end loop;
commit;
end;
/

SELECT * FROM CUSTOMERS;

-- Scenario 3: Reminder for Loans Due in 30 Days

set serveroutput on;
DECLARE
cursor cur is select LoanID,CustomerID,DueDate from Loans where DueDate between sysdate and sysdate+30;
BEGIN
for c in cur loop
dbms_output.put_line('Reminder Loan '||c.LoanID||' for Customer '||c.CustomerID||' is due on '||to_char(c.DueDate,'DD-MON-YYYY'));
end loop;
end;
/
